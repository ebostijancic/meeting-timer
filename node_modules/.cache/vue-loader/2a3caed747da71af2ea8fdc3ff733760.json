{"remainingRequest":"/home/opam/dev/stand-up-manager/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/opam/dev/stand-up-manager/src/components/HeadPool.vue?vue&type=style&index=0&id=ab0ac768&scoped=true&lang=scss","dependencies":[{"path":"/home/opam/dev/stand-up-manager/src/components/HeadPool.vue","mtime":1531085408199},{"path":"/home/opam/dev/stand-up-manager/node_modules/css-loader/index.js","mtime":0},{"path":"/home/opam/dev/stand-up-manager/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1521907989000},{"path":"/home/opam/dev/stand-up-manager/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/home/opam/dev/stand-up-manager/node_modules/sass-loader/lib/loader.js","mtime":499162500000},{"path":"/home/opam/dev/stand-up-manager/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/home/opam/dev/stand-up-manager/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.container {\n   padding:0px;\n   position:relative;\n   height:inherit;\n}\n.image {\n  display:inline-block;\n  width:80px;\n  height:100%;\n  background:#DDD;\n  position:absolute;\n  top:0px;\n  left:0px;\n}\n.image-empty-placeholder {\n  display:inline-block;\n  width:80px;\n  height:inherit;\n  background:#ffffff4a;\n  position:absolute;\n  top:0px;\n  left:0px;\n}\n.info {\n  display:inline-block;\n  padding:2px 2px;\n  margin-left:80px;\n  height:inherit;\n}  \n.overtime {\n  color:red;\n}\n.overtime:not(:empty) {\n  color:red;\n} \n.overtime:not(:empty) {\n  color:red;\n  animation: blinker 2s linear infinite;\n}   \n.paused {\n  color:orange;\n    animation: blinker 2s linear infinite;\n} \n.time-per-person {\n  width:70px;\n  border-radius:0px;\n  height:auto;\n  border:none;\n  padding:0px;\n  background:white;\n  outline:1px solid white;\n  line-height:inherit;\n  font-size:inherit;\n}  \n\n@keyframes blinker {\n  50% {\n    opacity: 0;\n  }\n}\n",{"version":3,"sources":["HeadPool.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"HeadPool.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"container\">      \n      <!--v-bind:style=\"{ background: person && person.favoriteColor }\"-->\n        <img \n            class=\"image\"\n            v-if=\"person.name !== ''\"\n            v-bind:src=\"person.image\" \n        />\n        <div \n            class=\"image-empty-placeholder\"\n            v-if=\"person.name === ''\"\n        />\n        <div class=\"info\">  \n          <h3>Stand-up for day: {{getToday()}}</h3>       \n          <div class=\"general-info\">\n            <div class=\"time-limit\">\n              <label>Time Limit for each of  <strong>{{numberOfParticipants}} participants</strong> is: </label>\n              <input v-model=\"timeLimit\" class=\"time-per-person\"/>\n            </div>\n\n            <div class=\"duration-container\" >         \n              <span            \n                class=\"duration\"\n                title=\"Click to pause main Stopwatch\"\n                v-on:click=\"pauseMainStopwatch()\"\n              >\n                <span v-if=\"durationInHHmmss\" class=\"duration-timer\">Total Speaking Time is <strong>{{durationInHHmmss}}</strong></span>\n                <span v-if=\"person && person.name === '' && mainStopwatch.isRunning() === false && mainStopwatch.getTime() > 0\" class=\"paused\">Paused</span>\n              </span>\n            </div>\n          </div>\n          <div v-if=\"person.name !== ''\" class=\"name\">\n              <strong>{{person.name}}</strong>\n              <span v-if=\"person.name !== ''\" class=\"current-person-time\">\n                <label> speaks </label>\n                <span class=\"time\">\n                    <strong>{{currentTimeInHHmmss}}</strong>\n                    <span class=\"overtime\">{{overtimeTimeInHHmmss}}</span>\n                </span>   \n                <span>{{averagePersonTimeInHHmmss}}</span>                 \n             </span>              \n          </div>\n        </div>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Prop, Vue } from 'vue-property-decorator';\nimport Stopwatch, { StopwatchCallback } from '../factories/Stopwatch';\nimport TimeUtils from '../utils/TimeUtils';\nimport Person from '../interfaces/Person';\nimport PersonService from '../services/PersonService';\n\n@Component\nexport default class HeadPool extends Vue {\n  @Prop() private person!: Person;\n  @Prop() private timeLimitInSeconds!: number;\n  @Prop() private mainStopwatch!: Stopwatch;\n  @Prop() private setTalkingPerson!: Function;\n\n  private pauseMainStopwatch(): void {\n    if (this.mainStopwatch.isRunning() === true) {\n        this.mainStopwatch.stop();\n        this.setTalkingPerson(PersonService.createPerson());\n    }\n  }\n\n  private getToday(): string {\n    const currentdate = new Date(); \n    return currentdate.getDate() + '/'\n            + (currentdate.getMonth()+1)  + '/' \n            + currentdate.getFullYear();\n  }\n\n  get currentTimeInHHmmss(): string {\n      const time = TimeUtils.getCurrentTimeInHHmmss(Number(this.person.currentTimeInSeconds), this.timeLimitInSeconds, true);\n      return time;\n  }\n\n  get overtimeTimeInHHmmss(): string {    \n      return TimeUtils.getOvertimeInHHmmss(Number(this.person.currentTimeInSeconds), this.timeLimitInSeconds, true);\n  }\n  get timeLimit(): string {\n    return this.$store.state.timeLimit;\n  }\n  get duration(): number {\n    return this.$store.state.duration;\n  }\n\n  get durationInHHmmss() {\n    const duration = TimeUtils.from_Seconds_to_HHmmss(this.duration, true);    \n    return duration ? `${duration}` : '';\n  } \n  get numberOfParticipants() {\n    return `${this.$store.state.persons.length}`;\n  }\n  get averagePersonTimeInHHmmss(): string {\n    const participants = this.$store.state.persons;\n    \n    let sumTime = 0;\n    let sumNumberOfParticipants = 0;\n    for (let p of participants) {      \n      const time = Number(p.currentTimeInSeconds);\n      if (time > 0) {\n        sumTime += time;\n        sumNumberOfParticipants++;\n      }      \n    }\n    const averageTime = sumTime > 0 && sumNumberOfParticipants > 1 ? sumTime/sumNumberOfParticipants : 0; \n    return averageTime > 0 ? ` (Ã˜ ${TimeUtils.from_Seconds_to_HHmmss(averageTime, true)})` : '';\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n  .container {\n     padding:0px;\n     position:relative;\n     height:inherit;\n  }\n  .image {\n    display:inline-block;\n    width:80px;\n    height:100%;\n    background:#DDD;\n    position:absolute;\n    top:0px;\n    left:0px;\n  }\n  .image-empty-placeholder {\n    display:inline-block;\n    width:80px;\n    height:inherit;\n    background:#ffffff4a;\n    position:absolute;\n    top:0px;\n    left:0px;\n  }\n  .info {\n    display:inline-block;\n    padding:2px 2px;\n    margin-left:80px;\n    height:inherit;\n  }  \n  .overtime {\n    color:red;\n  }\n  .overtime:not(:empty) {\n    color:red;\n  } \n  .overtime:not(:empty) {\n    color:red;\n    animation: blinker 2s linear infinite;\n  }   \n  .paused {\n    color:orange;\n      animation: blinker 2s linear infinite;\n  } \n  .time-per-person {\n    width:70px;\n    border-radius:0px;\n    height:auto;\n    border:none;\n    padding:0px;\n    background:white;\n    outline:1px solid white;\n    line-height:inherit;\n    font-size:inherit;\n  }  \n\n  @keyframes blinker {\n    50% {\n      opacity: 0;\n    }\n  }\n</style>\n"]}]}