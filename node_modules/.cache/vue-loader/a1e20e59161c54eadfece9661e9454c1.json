{"remainingRequest":"/home/opam/dev/stand-up-manager/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/opam/dev/stand-up-manager/src/components/Pool.vue?vue&type=style&index=0&id=081c5368&scoped=true&lang=scss","dependencies":[{"path":"/home/opam/dev/stand-up-manager/src/components/Pool.vue","mtime":1530825383849},{"path":"/home/opam/dev/stand-up-manager/node_modules/css-loader/index.js","mtime":0},{"path":"/home/opam/dev/stand-up-manager/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1521907989000},{"path":"/home/opam/dev/stand-up-manager/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/home/opam/dev/stand-up-manager/node_modules/sass-loader/lib/loader.js","mtime":499162500000},{"path":"/home/opam/dev/stand-up-manager/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/home/opam/dev/stand-up-manager/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.pool {\n  margin-bottom:2px;\n  cursor:pointer;\n  position:relative;\n  background:#f0f0f085;\n  padding:0px;\n  height:40px;\n  overflow:hidden;\n}\n.pool.active.onlySetter {\n  background:#DDD;\n  outline:3px solid #777;\n}\n\n.pool:hover {\n  background:#eeeeeeb5;\n}\n.pool .image {\n  height:100%;\n  width:40px;\n  position:absolute;\n  left:0px;\n  top:0px;\n}\n.pool .progress-container {\n  height:100%;\n  position:relative;\n  padding:0px;\n  display:block;\n  width:100%;\n  margin-left:40px;\n}\n.pool .progress-container .name {\n  display:block;\n  font-weight:800;\n  font-size:22px;\n  padding-left:2px;\n  overflow:hidden;\n  position:absolute;\n  top:1px;\n  left:2px;\n  z-index:20;\n}\n.pool .progress-container .time {\n  display:block;\n  font-weight:400;\n  font-size:15px;\n  padding-left:2px;\n  position:absolute;\n  bottom:1px;\n  left:2px;\n  z-index:20;\n}\n\n.pool .progress-container .overtime:not(:empty) {\n  color:red;\n} \n.pool.active .progress-container .overtime:not(:empty) {\n  color:red;\n  animation: blinker 2s linear infinite;\n}   \n\n@keyframes blinker {\n  50% {\n    opacity: 0;\n  }\n}\n\n.pool .remove {\n  position: absolute;\n  right: 0px;\n  top: 0px;\n  width: 20px;\n  padding: 0px 0px 0px 1px;\n  cursor: pointer;\n  text-align: center;\n  height: 17px;\n  font-size: 17px;\n  line-height: 20px;\n  color:#777;\n  border-radius: 0px 0px 0px 6px;\n  font-weight: bold;\n  background: transparent;\n}\n.pool .remove:hover {\n  color:red;\n}\n.pool .progress-container .progress-bar {\n  position:absolute;\n  top:0px;\n  left:0px;\n  height:100%;\n  width:0%;\n  background:#fa8f8f;\n  transition:all .1s;\n}\n.pool.active .progress-container .progress-bar {\n  background:green;\n  -webkit-box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.15);\n  box-shadow: inset 0 0px 0 rgba(0, 0, 0, 0.15);\n  transition: width 0.6s ease;\n  background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.5) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.5) 50%, rgba(255, 255, 255, 0.5) 75%, transparent 75%, transparent);\n  background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.5) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.5) 50%, rgba(255, 255, 255, 0.5) 75%, transparent 75%, transparent);\n  background-size: 40px 40px;\n  -webkit-animation: progress-bar-stripes 2s linear infinite;\n  animation: progress-bar-stripes 2s linear infinite;\n}\n@-webkit-keyframes progress-bar-stripes {\n  from {\n    background-position: 40px 0;\n  }\n  to {\n    background-position: 0 0;\n  }\n}\n\n@keyframes progress-bar-stripes {\n  from {\n    background-position: 40px 0;\n  }\n  to {\n    background-position: 0 0;\n  }\n}\n",{"version":3,"sources":["Pool.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Pool.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"pool\" \n    v-on:click=\"toggle()\"\n    v-bind:class=\"{ active: person.talking, onlySetter: onlySetter===true }\"\n  >\n    <img class=\"image\" v-bind:src=\"person.image\" />\n    <div class=\"progress-container\">      \n      <span class=\"name\">{{person.name}}</span>\n      <span v-if=\"onlySetter === false\" class=\"time\">\n        <span>{{currentTimeInHHmmss}}</span>\n        <span class=\"overtime\">{{overtimeTimeInHHmmss}}</span>\n      </span>\n      <span v-if=\"onlySetter === false\"\n        v-bind:style=\"{width: currentTimeInPercentage, backgroundColor: person.favoriteColor }\"\n        class=\"progress-bar\"\n      ></span>\n    </div>\n    <div \n        v-if=\"onlySetter === false\"\n        class=\"remove\" \n        v-on:click=\"(event)=> {removePool(person, event) }\"\n    >&times;</div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Prop, Vue } from 'vue-property-decorator';\nimport Stopwatch, { StopwatchCallback } from '../factories/Stopwatch';\nimport TimeUtils from '../utils/TimeUtils';\nimport Person from '../interfaces/Person';\nimport PersonService from '../services/PersonService';\n\n@Component\nexport default class Pool extends Vue {\n  @Prop() private person!: Person;\n  @Prop() private timeLimitInSeconds!: number;\n  @Prop() private talkingPerson!: Person;\n  @Prop() private setTalkingPerson!: Function;\n  @Prop() private removePerson!: Function;\n  @Prop() private onlySetter !: boolean; // in case of remote control\n\n  private stopwatch = new Stopwatch();\n  private personService = new PersonService();\n\n  private toggle(): void {\n    if (this.person.talking === false) {\n      this.setTalkingPerson(this.person); \n      this.startTalking(); \n    } else {\n      this.setTalkingPerson(PersonService.createPerson());\n      this.stopTalking();\n    }\n  }\n\n  private removePool(person: Person, event: Event) {\n    this.setTalkingPerson(PersonService.createPerson()); // will create empty person\n    this.stopTalking();\n    this.removePerson(person);\n\n    event.stopPropagation();\n  }\n\n  private updateCurrentTimeInSeconds(time: number): void {\n    if (this.talkingPerson.name !== '' && this.talkingPerson.name === this.person.name) {\n      this.personService.change(this.person, { ...this.person, currentTimeInSeconds: Number(time).toFixed(0) });\n    } else {\n      this.stopTalking();\n    }\n  }\n\n  private startTalking() {\n    if (this.stopwatch.isRunning() === false) {\n      this.personService.change(this.person, { ...this.person, talking:  true });\n      this.stopwatch.start((time: number) => {\n        this.updateCurrentTimeInSeconds(time);\n      });\n    }\n  }\n\n  private stopTalking() {\n    if (this.stopwatch.isRunning() === true) {      \n      this.personService.change(this.person, { ...this.person, talking:  false });\n      this.stopwatch.stop();\n    }\n  }\n\n  private get currentTimeInHHmmss(): string {\n    return TimeUtils.getCurrentTimeInHHmmss(Number(this.person.currentTimeInSeconds), this.timeLimitInSeconds, true);\n  }\n\n  private get overtimeTimeInHHmmss(): string {    \n    return TimeUtils.getOvertimeInHHmmss(Number(this.person.currentTimeInSeconds), this.timeLimitInSeconds, true);\n  }\n\n  private get currentTimeInPercentage(): string {\n    let timeLimit: number = 0;\n    \n    if (this.stopwatch.getTime() > 0) {\n      timeLimit = this.stopwatch.getTime();\n      timeLimit = timeLimit / this.timeLimitInSeconds;\n      timeLimit = timeLimit * 100;\n      return timeLimit.toFixed(0) + '%';\n    } \n    return '0%';\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n  .pool {\n    margin-bottom:2px;\n    cursor:pointer;\n    position:relative;\n    background:#f0f0f085;\n    padding:0px;\n    height:40px;\n    overflow:hidden;\n  }\n  .pool.active.onlySetter {\n    background:#DDD;\n    outline:3px solid #777;\n  }\n\n  .pool:hover {\n    background:#eeeeeeb5;\n  }\n  .pool .image {\n    height:100%;\n    width:40px;\n    position:absolute;\n    left:0px;\n    top:0px;\n  }\n  .pool .progress-container {\n    height:100%;\n    position:relative;\n    padding:0px;\n    display:block;\n    width:100%;\n    margin-left:40px;\n  }\n  .pool .progress-container .name {\n    display:block;\n    font-weight:800;\n    font-size:22px;\n    padding-left:2px;\n    overflow:hidden;\n    position:absolute;\n    top:1px;\n    left:2px;\n    z-index:20;\n  }\n  .pool .progress-container .time {\n    display:block;\n    font-weight:400;\n    font-size:15px;\n    padding-left:2px;\n    position:absolute;\n    bottom:1px;\n    left:2px;\n    z-index:20;\n  }\n\n  .pool .progress-container .overtime:not(:empty) {\n    color:red;\n  } \n  .pool.active .progress-container .overtime:not(:empty) {\n    color:red;\n    animation: blinker 2s linear infinite;\n  }   \n\n  @keyframes blinker {\n    50% {\n      opacity: 0;\n    }\n  }\n\n  .pool .remove {\n    position: absolute;\n    right: 0px;\n    top: 0px;\n    width: 20px;\n    padding: 0px 0px 0px 1px;\n    cursor: pointer;\n    text-align: center;\n    height: 17px;\n    font-size: 17px;\n    line-height: 20px;\n    color:#777;\n    border-radius: 0px 0px 0px 6px;\n    font-weight: bold;\n    background: transparent;\n  }\n  .pool .remove:hover {\n    color:red;\n  }\n  .pool .progress-container .progress-bar {\n    position:absolute;\n    top:0px;\n    left:0px;\n    height:100%;\n    width:0%;\n    background:#fa8f8f;\n    transition:all .1s;\n  }\n  .pool.active .progress-container .progress-bar {\n    background:green;\n    -webkit-box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.15);\n    box-shadow: inset 0 0px 0 rgba(0, 0, 0, 0.15);\n    transition: width 0.6s ease;\n    background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.5) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.5) 50%, rgba(255, 255, 255, 0.5) 75%, transparent 75%, transparent);\n    background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.5) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.5) 50%, rgba(255, 255, 255, 0.5) 75%, transparent 75%, transparent);\n    background-size: 40px 40px;\n    -webkit-animation: progress-bar-stripes 2s linear infinite;\n    animation: progress-bar-stripes 2s linear infinite;\n  }\n  @-webkit-keyframes progress-bar-stripes {\n    from {\n      background-position: 40px 0;\n    }\n    to {\n      background-position: 0 0;\n    }\n  }\n\n  @keyframes progress-bar-stripes {\n    from {\n      background-position: 40px 0;\n    }\n    to {\n      background-position: 0 0;\n    }\n  }\n</style>\n"]}]}