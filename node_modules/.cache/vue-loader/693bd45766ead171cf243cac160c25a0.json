{"remainingRequest":"/home/opam/dev/stand-up-manager/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/opam/dev/stand-up-manager/src/views/StandUp.vue?vue&type=style&index=0&id=33ff9747&scoped=true&lang=scss","dependencies":[{"path":"/home/opam/dev/stand-up-manager/src/views/StandUp.vue","mtime":1531085071703},{"path":"/home/opam/dev/stand-up-manager/node_modules/css-loader/index.js","mtime":0},{"path":"/home/opam/dev/stand-up-manager/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1521907989000},{"path":"/home/opam/dev/stand-up-manager/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/home/opam/dev/stand-up-manager/node_modules/sass-loader/lib/loader.js","mtime":499162500000},{"path":"/home/opam/dev/stand-up-manager/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/home/opam/dev/stand-up-manager/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.container {\n  padding:2px;\n  overflow:hidden;\n  \n}\n.overview-panel {\n  margin-bottom:2px; \n  position:fixed;\n  top:0px;\n  left:0px;\n  width:100%;\n  height:80px;\n  overflow:hidden;\n  z-index:1000;\n  background:#cde2ff;\n  box-shadow:2px 2px 7px #d1d1d1;\n} \n.pools {\n  margin-top:80px;\n} \n\n.add-person-container {\n  height:40px;\n  font-size:30px;\n  white-space:nowrap;\n  position:relative;\n  background:#DDD;\n  outline: 1px solid #777;\n}\n.add-person-container img {\n  position:absolute;\n  width:40px;\n  height:100%;\n  top:0px;\n  left:0px;\n}\n.add-person-container input {\n  height: 100%;\n  font-size: 35px;\n  width: 100%;\n  font-weight: bold;\n  color: #2d3e50;\n  padding-left: 44px;\n  padding-top: 7px;\n  border: none;\n  background: white;\n  outline: none;\n  text-align:left;\n  padding-right:5px;\n}\n.add-person-container button {\n  height:100%;\n  width:40px;\n  position:absolute;\n  right:0px;\n  top:0px;\n  cursor:pointer;\n  border:none;\n  background:#DDD;\n}\n\n",{"version":3,"sources":["StandUp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmJA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"StandUp.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"overview-panel\">\n      <HeadPool \n        :person=talkingPerson \n        :timeLimitInSeconds=timeLimitInSeconds \n        :mainStopwatch=mainStopwatch\n        :setTalkingPerson=setTalkingPerson\n      />\n    </div>    \n    <div class=\"pools\">\n      <Pool v-for=\"p in personArray\" \n        :key=p.name \n        :person=p\n        :timeLimitInSeconds=timeLimitInSeconds       \n        :talkingPerson=talkingPerson \n        :setTalkingPerson=setTalkingPerson\n        :removePerson=removePerson\n        :onlySetter=false\n        :sync=sync\n      />\n    </div>\n    <div class=\"add-person-container\">\n      <img :src=\"newPersonImage\" />\n      <input v-model=\"newPersonName\" title=\"Add Person\"/>\n      <button v-on:click=\"()=> {addPerson()}\">+</button>\n    </div>\n    <button v-on:click=\"()=> {finish()}\">Finish</button>\n\n    <button v-on:click=\"()=> {sync()}\">Firebase</button>\n\n    <button v-on:click=\"()=> {resetApp()}\">Reset</button>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from 'vue-property-decorator';\nimport HelloWorld from '@/components/HelloWorld.vue'; // @ is an alias to /src\nimport HeadPool from '@/components/HeadPool.vue';\nimport Pool from '@/components/Pool.vue';\nimport * as Collections from 'typescript-collections';\nimport Stopwatch from '../factories/Stopwatch';\nimport TimeUtils from '../utils/TimeUtils';\nimport PersonService from '../services/PersonService';\nimport ImageService from '../services/ImageService';\nimport Person from '../interfaces/Person';\nimport FirebaseService from '../services/FirebaseService';\nimport Status from '../interfaces/Status';\nimport { CHANGE_PERSONS, CHANGE_TALKING_PERSON, CHANGE_DURATION, CHANGE_TIME_LIMIT } from '../store';\n\n@Component({\n  components: {\n    HeadPool,\n    Pool,\n  },\n})\nexport default class StandUp extends Vue {\n\n  private personService = new PersonService();\n  private imageService = new ImageService();\n\n  private newPersonName: string|null = null;\n  private newPersonImage: string = '';\n\n  private avatarUrl = 'img/avatars/1.png';\n  private imageIndex = 0;\n\n  private mainStopwatch = new Stopwatch();\n\n  private created() {\n      this.newPersonImage = this.imageService.getNextImage();\n  }\n\n  private setTalkingPerson(person: Person): void {    \n    this.$store.commit(CHANGE_TALKING_PERSON, person);    \n    this.startTalkingTimerWhenPerson(person);\n  }\n  private setDuration(time: number): void {\n    this.$store.commit(CHANGE_DURATION, time);\n  }\n  private startTalkingTimerWhenPerson(person): void {\n    if (this.talkingPerson.name !== '') {\n      if (this.mainStopwatch.isRunning() === false) {\n        this.mainStopwatch.start((time: number) => {\n          this.setDuration(time);     \n        });\n      }\n    } \n  }\n  private removePerson(person: Person): void {\n    this.personService.remove(person);\n    this.setTalkingPerson(PersonService.createPerson());\n  }\n\n  private sync(): void {\n   \n   const state:Status = {\n      talkingPerson:  this.$store.state.talkingPerson,\n      peopleArray: this.$store.state.persons,\n      duration: this.$store.state.duration,\n      timeLimit: this.$store.state.timeLimit,\n    };    \n    FirebaseService.sendInformation(state);\n  }\n\n  private resetApp(): void { \n    this.personService.createDefaultPeople (); \n    const state:Status = {\n      talkingPerson:  this.$store.state.talkingPerson,\n      peopleArray: this.$store.state.persons,\n      duration: this.$store.state.duration,\n      timeLimit: this.$store.state.timeLimit,\n    };    \n    FirebaseService.sendInformation(state);\n  }\n\n  private addPerson() {\n    if (this.newPersonName !== null ) {\n      if (this.personService.findByName(this.newPersonName) === null) {\n        this.personService.add(this.newPersonName, this.newPersonImage );\n      } else {\n        alert(`${this.newPersonName} already exists! Choose different name.`);\n      }\n      this.newPersonName = null;\n      this.newPersonImage = this.imageService.getNextImage();\n    }\n  }\n\n  private finish() {\n    alert();\n  }\n  get talkingPerson(): Person {\n    return this.$store.state.talkingPerson;\n  }  \n  get timeLimitInSeconds() {\n    return TimeUtils.from_HHmmss_to_Seconds(this.$store.state.timeLimit, true);\n  }\n\n  get personArray(): Person[] {\n    return this.$store.state.persons;\n  }\n\n\n}\n</script>\n\n<style scoped lang=\"scss\">\n  .container {\n    padding:2px;\n    overflow:hidden;\n    \n  }\n  .overview-panel {\n    margin-bottom:2px; \n    position:fixed;\n    top:0px;\n    left:0px;\n    width:100%;\n    height:80px;\n    overflow:hidden;\n    z-index:1000;\n    background:#cde2ff;\n    box-shadow:2px 2px 7px #d1d1d1;\n  } \n  .pools {\n    margin-top:80px;\n  } \n  \n  .add-person-container {\n    height:40px;\n    font-size:30px;\n    white-space:nowrap;\n    position:relative;\n    background:#DDD;\n    outline: 1px solid #777;\n  }\n  .add-person-container img {\n    position:absolute;\n    width:40px;\n    height:100%;\n    top:0px;\n    left:0px;\n  }\n  .add-person-container input {\n    height: 100%;\n    font-size: 35px;\n    width: 100%;\n    font-weight: bold;\n    color: #2d3e50;\n    padding-left: 44px;\n    padding-top: 7px;\n    border: none;\n    background: white;\n    outline: none;\n    text-align:left;\n    padding-right:5px;\n  }\n  .add-person-container button {\n    height:100%;\n    width:40px;\n    position:absolute;\n    right:0px;\n    top:0px;\n    cursor:pointer;\n    border:none;\n    background:#DDD;\n  }\n\n</style>\n"]}]}