{"remainingRequest":"/home/opam/dev/stand-up-manager/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/opam/dev/stand-up-manager/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/opam/dev/stand-up-manager/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/opam/dev/stand-up-manager/src/views/StandUp.vue?vue&type=template&id=33ff9747","dependencies":[{"path":"/home/opam/dev/stand-up-manager/src/views/StandUp.vue","mtime":1529229543962},{"path":"/home/opam/dev/stand-up-manager/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/home/opam/dev/stand-up-manager/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1526010763000},{"path":"/home/opam/dev/stand-up-manager/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/home/opam/dev/stand-up-manager/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"stand-up-manager\" }, [\n    _c(\"div\", [\n      _vm.talkingPerson !== null\n        ? _c(\"div\", [\n            _c(\"label\", [_vm._v(\"Current Person\")]),\n            _vm._v(\"\\n      \" + _vm._s(_vm.talkingPerson.name) + \"\\n    \")\n          ])\n        : _vm._e(),\n      _vm.talkingPerson === null\n        ? _c(\"div\", [_c(\"label\", [_vm._v(\"No Person is not talking\")])])\n        : _vm._e(),\n      _c(\"div\", [\n        _c(\"label\", [_vm._v(\"Max time limit per person\")]),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.timeLimit,\n              expression: \"timeLimit\"\n            }\n          ],\n          attrs: { placeholder: \"HH:mm:ss\" },\n          domProps: { value: _vm.timeLimit },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.timeLimit = $event.target.value\n            }\n          }\n        })\n      ])\n    ]),\n    _c(\"div\", [\n      _c(\"span\", [_vm._v(_vm._s(_vm.standupTime))]),\n      _c(\n        \"span\",\n        {\n          staticStyle: { float: \"right\" },\n          on: {\n            click: function($event) {\n              _vm.pauseMainStopwatch()\n            }\n          }\n        },\n        [_vm._v(\"Pause\")]\n      )\n    ]),\n    _c(\n      \"div\",\n      { staticClass: \"pools\" },\n      _vm._l(_vm.peopleArray, function(p) {\n        return _c(\"Pool\", {\n          key: p.name,\n          attrs: {\n            person: p,\n            timeLimitInSeconds: _vm.timeLimitInSeconds,\n            talkingPerson: _vm.talkingPerson,\n            setTalkingPerson: _vm.setTalkingPerson,\n            removePerson: _vm.removePerson\n          }\n        })\n      })\n    ),\n    _c(\"div\", [\n      _c(\"img\", { attrs: { src: _vm.newPersonImage } }),\n      _c(\"input\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.newPersonName,\n            expression: \"newPersonName\"\n          }\n        ],\n        domProps: { value: _vm.newPersonName },\n        on: {\n          input: function($event) {\n            if ($event.target.composing) {\n              return\n            }\n            _vm.newPersonName = $event.target.value\n          }\n        }\n      }),\n      _c(\n        \"button\",\n        {\n          on: {\n            click: function() {\n              _vm.addPerson()\n            }\n          }\n        },\n        [_vm._v(\"+\")]\n      )\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}