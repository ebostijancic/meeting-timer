{"remainingRequest":"/home/opam/dev/stand-up-manager/node_modules/babel-loader/lib/index.js!/home/opam/dev/stand-up-manager/node_modules/ts-loader/index.js??ref--13-2!/home/opam/dev/stand-up-manager/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/opam/dev/stand-up-manager/src/components/HeadPool.vue?vue&type=script&lang=ts","dependencies":[{"path":"/home/opam/dev/stand-up-manager/src/components/HeadPool.vue","mtime":1531053640576},{"path":"/home/opam/dev/stand-up-manager/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/home/opam/dev/stand-up-manager/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/home/opam/dev/stand-up-manager/node_modules/ts-loader/index.js","mtime":1528433923000},{"path":"/home/opam/dev/stand-up-manager/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\nimport _classCallCheck from \"/home/opam/dev/stand-up-manager/node_modules/@babel/runtime/helpers/builtin/es6/classCallCheck\";\nimport _inherits from \"/home/opam/dev/stand-up-manager/node_modules/@babel/runtime/helpers/builtin/es6/inherits\";\nimport _createClass from \"/home/opam/dev/stand-up-manager/node_modules/@babel/runtime/helpers/builtin/es6/createClass\";\nimport _possibleConstructorReturn from \"/home/opam/dev/stand-up-manager/node_modules/@babel/runtime/helpers/builtin/es6/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/opam/dev/stand-up-manager/node_modules/@babel/runtime/helpers/builtin/es6/getPrototypeOf\";\nimport * as tslib_1 from \"tslib\";\n\nvar _a, _b, _c;\n\nimport { Component, Prop, Vue } from 'vue-property-decorator';\nimport Stopwatch from '../factories/Stopwatch';\nimport TimeUtils from '../utils/TimeUtils';\nimport Person from '../interfaces/Person';\nimport PersonService from '../services/PersonService';\n\nvar HeadPool =\n/*#__PURE__*/\nfunction (_Vue) {\n  function HeadPool() {\n    _classCallCheck(this, HeadPool);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(HeadPool).apply(this, arguments));\n  }\n\n  _createClass(HeadPool, [{\n    key: \"pauseMainStopwatch\",\n    value: function pauseMainStopwatch() {\n      if (this.mainStopwatch.isRunning() === true) {\n        this.mainStopwatch.stop();\n        this.setTalkingPerson(PersonService.createPerson());\n      }\n    }\n  }, {\n    key: \"getToday\",\n    value: function getToday() {\n      var currentdate = new Date();\n      return currentdate.getDate() + \"/\" + (currentdate.getMonth() + 1) + \"/\" + currentdate.getFullYear();\n    }\n  }, {\n    key: \"currentTimeInHHmmss\",\n    get: function get() {\n      var time = TimeUtils.getCurrentTimeInHHmmss(Number(this.person.currentTimeInSeconds), this.timeLimitInSeconds, true);\n      return time;\n    }\n  }, {\n    key: \"overtimeTimeInHHmmss\",\n    get: function get() {\n      return TimeUtils.getOvertimeInHHmmss(Number(this.person.currentTimeInSeconds), this.timeLimitInSeconds, true);\n    }\n  }, {\n    key: \"timeLimit\",\n    get: function get() {\n      return this.$store.state.timeLimit;\n    }\n  }, {\n    key: \"duration\",\n    get: function get() {\n      return this.$store.state.duration;\n    }\n  }, {\n    key: \"durationInHHmmss\",\n    get: function get() {\n      var duration = TimeUtils.from_Seconds_to_HHmmss(this.duration, true);\n      return duration ? \"\".concat(duration) : \"\";\n    }\n  }, {\n    key: \"numberOfParticipants\",\n    get: function get() {\n      return \"\".concat(this.$store.state.persons.length);\n    }\n  }, {\n    key: \"averagePersonTimeInHHmmss\",\n    get: function get() {\n      var participants = this.$store.state.persons;\n      var sumTime = 0;\n      var sumNumberOfParticipants = 0;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = participants[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var p = _step.value;\n          var time = Number(p.currentTimeInSeconds);\n\n          if (time > 0) {\n            sumTime += time;\n            sumNumberOfParticipants++;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var averageTime = sumTime > 0 && sumNumberOfParticipants > 1 ? sumTime / sumNumberOfParticipants : 0;\n      return averageTime > 0 ? \" (\\xD8 \".concat(TimeUtils.from_Seconds_to_HHmmss(averageTime, true), \")\") : \"\";\n    }\n  }]);\n\n  _inherits(HeadPool, _Vue);\n\n  return HeadPool;\n}(Vue);\n\ntslib_1.__decorate([Prop(), tslib_1.__metadata(\"design:type\", typeof (_a = typeof Person !== \"undefined\" && Person) === \"function\" && _a || Object)], HeadPool.prototype, \"person\", void 0);\n\ntslib_1.__decorate([Prop(), tslib_1.__metadata(\"design:type\", Number)], HeadPool.prototype, \"timeLimitInSeconds\", void 0);\n\ntslib_1.__decorate([Prop(), tslib_1.__metadata(\"design:type\", typeof (_b = typeof Stopwatch !== \"undefined\" && Stopwatch) === \"function\" && _b || Object)], HeadPool.prototype, \"mainStopwatch\", void 0);\n\ntslib_1.__decorate([Prop(), tslib_1.__metadata(\"design:type\", typeof (_c = typeof Function !== \"undefined\" && Function) === \"function\" && _c || Object)], HeadPool.prototype, \"setTalkingPerson\", void 0);\n\nHeadPool = tslib_1.__decorate([Component], HeadPool);\nexport default HeadPool;",{"version":3,"sources":["/home/opam/dev/stand-up-manager/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/opam/dev/stand-up-manager/src/components/HeadPool.vue?vue&type=script&lang=ts"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Prop, Vue } from 'vue-property-decorator';\nimport Stopwatch, { StopwatchCallback } from '../factories/Stopwatch';\nimport TimeUtils from '../utils/TimeUtils';\nimport Person from '../interfaces/Person';\nimport PersonService from '../services/PersonService';\n\n@Component\nexport default class HeadPool extends Vue {\n  @Prop() private person!: Person;\n  @Prop() private timeLimitInSeconds!: number;\n  @Prop() private mainStopwatch!: Stopwatch;\n  @Prop() private setTalkingPerson!: Function;\n\n  private pauseMainStopwatch(): void {\n    if (this.mainStopwatch.isRunning() === true) {\n        this.mainStopwatch.stop();\n        this.setTalkingPerson(PersonService.createPerson());\n    }\n  }\n\n  private getToday(): string {\n    const currentdate = new Date(); \n    return currentdate.getDate() + \"/\"\n            + (currentdate.getMonth()+1)  + \"/\" \n            + currentdate.getFullYear();\n  }\n\n  get currentTimeInHHmmss(): string {\n      const time = TimeUtils.getCurrentTimeInHHmmss(Number(this.person.currentTimeInSeconds), this.timeLimitInSeconds, true);\n      return time;\n  }\n\n  get overtimeTimeInHHmmss(): string {    \n      return TimeUtils.getOvertimeInHHmmss(Number(this.person.currentTimeInSeconds), this.timeLimitInSeconds, true);\n  }\n  get timeLimit(): string {\n    return this.$store.state.timeLimit;\n  }\n  get duration(): number {\n    return this.$store.state.duration;\n  }\n\n  get durationInHHmmss() {\n    const duration = TimeUtils.from_Seconds_to_HHmmss(this.duration, true);    \n    return duration ? `${duration}` : \"\";\n  } \n  get numberOfParticipants() {\n    return `${this.$store.state.persons.length}`;\n  }\n  get averagePersonTimeInHHmmss(): string {\n    const participants = this.$store.state.persons;\n    \n    let sumTime = 0;\n    let sumNumberOfParticipants = 0;\n    for (let p of participants) {      \n      const time = Number(p.currentTimeInSeconds);\n      if (time > 0) {\n        sumTime += time;\n        sumNumberOfParticipants++;\n      }      \n    }\n    const averageTime = sumTime > 0 && sumNumberOfParticipants > 1 ? sumTime/sumNumberOfParticipants : 0; \n    return averageTime > 0 ? ` (Ø ${TimeUtils.from_Seconds_to_HHmmss(averageTime, true)})` : \"\";\n  }\n}\n"],"sourceRoot":""}]}