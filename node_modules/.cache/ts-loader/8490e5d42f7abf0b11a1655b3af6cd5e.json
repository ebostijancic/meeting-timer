{"remainingRequest":"/home/opam/dev/stand-up-manager/node_modules/babel-loader/lib/index.js!/home/opam/dev/stand-up-manager/node_modules/ts-loader/index.js??ref--13-2!/home/opam/dev/stand-up-manager/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/opam/dev/stand-up-manager/src/views/StandUp.vue?vue&type=script&lang=ts","dependencies":[{"path":"/home/opam/dev/stand-up-manager/src/views/StandUp.vue","mtime":1530047785596},{"path":"/home/opam/dev/stand-up-manager/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/home/opam/dev/stand-up-manager/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/home/opam/dev/stand-up-manager/node_modules/ts-loader/index.js","mtime":1528433923000},{"path":"/home/opam/dev/stand-up-manager/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _classCallCheck from \"/home/opam/dev/stand-up-manager/node_modules/@babel/runtime/helpers/builtin/es6/classCallCheck\";\nimport _inherits from \"/home/opam/dev/stand-up-manager/node_modules/@babel/runtime/helpers/builtin/es6/inherits\";\nimport _createClass from \"/home/opam/dev/stand-up-manager/node_modules/@babel/runtime/helpers/builtin/es6/createClass\";\nimport _possibleConstructorReturn from \"/home/opam/dev/stand-up-manager/node_modules/@babel/runtime/helpers/builtin/es6/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/opam/dev/stand-up-manager/node_modules/@babel/runtime/helpers/builtin/es6/getPrototypeOf\";\nimport * as tslib_1 from \"tslib\";\nimport { Component, Vue } from 'vue-property-decorator';\nimport HeadPool from '@/components/HeadPool.vue';\nimport Pool from '@/components/Pool.vue';\nimport Stopwatch from '../factories/Stopwatch';\nimport TimeUtils from '../utils/TimeUtils';\nimport PersonService from '../services/PersonService';\nimport ImageService from '../services/ImageService';\nimport { CHANGE_TALKING_PERSON, CHANGE_DURATION } from '../store';\n\nvar StandUp =\n/*#__PURE__*/\nfunction (_Vue) {\n  function StandUp() {\n    var _this;\n\n    _classCallCheck(this, StandUp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StandUp).apply(this, arguments));\n    _this.personService = new PersonService();\n    _this.imageService = new ImageService();\n    _this.newPersonName = null;\n    _this.newPersonImage = '';\n    _this.mainStopwatch = new Stopwatch();\n    _this.avatarUrl = 'img/avatars/1.png';\n    _this.imageIndex = 0;\n    return _this;\n  }\n\n  _createClass(StandUp, [{\n    key: \"created\",\n    value: function created() {\n      this.newPersonImage = this.imageService.getNextImage();\n    }\n  }, {\n    key: \"setTalkingPerson\",\n    value: function setTalkingPerson(person) {\n      this.$store.commit(CHANGE_TALKING_PERSON, person);\n      this.startTalkingTimerWhenPerson(person);\n    }\n  }, {\n    key: \"setDuration\",\n    value: function setDuration(time) {\n      this.$store.commit(CHANGE_DURATION, time);\n    }\n    /*\n      private setTimeLimit(timeLimit: string): void {\n        this.$store.commit(CHANGE_TIME_LIMIT, timeLimit);\n      }\n    */\n\n  }, {\n    key: \"startTalkingTimerWhenPerson\",\n    value: function startTalkingTimerWhenPerson(person) {\n      var _this2 = this;\n\n      if (this.talkingPerson.name !== '') {\n        if (this.mainStopwatch.isRunning() === false) {\n          this.mainStopwatch.start(function (time) {\n            _this2.setDuration(time);\n          });\n        }\n      }\n    }\n  }, {\n    key: \"removePerson\",\n    value: function removePerson(person) {\n      this.personService.remove(person);\n      this.setTalkingPerson(PersonService.createPerson());\n    }\n  }, {\n    key: \"clickFirebase\",\n    value: function clickFirebase() {\n      /*\n      const state:Status = {\n         talkingPerson: this.talkingPerson,\n         peopleArray: this.peopleArray,\n         duration: this.duration,\n         timeLimit: this.timeLimit,\n       };\n       FirebaseService.sendInformation(state);\n       console.log(this.$store.state.status);*/\n    }\n  }, {\n    key: \"addPerson\",\n    value: function addPerson() {\n      if (this.newPersonName !== null) {\n        if (this.personService.findByName(this.newPersonName) === null) {\n          this.personService.add(this.newPersonName, this.newPersonImage);\n        } else {\n          alert(\"\".concat(this.newPersonName, \" already exists! Choose different name.\"));\n        }\n\n        this.newPersonName = null;\n        this.newPersonImage = this.imageService.getNextImage();\n      }\n    }\n  }, {\n    key: \"pauseMainStopwatch\",\n    value: function pauseMainStopwatch() {\n      if (this.mainStopwatch.isRunning() === true) {\n        this.mainStopwatch.stop();\n        this.setTalkingPerson(PersonService.createPerson());\n      }\n    }\n  }, {\n    key: \"timeLimit\",\n    get: function get() {\n      return this.$store.state.timeLimit;\n    }\n  }, {\n    key: \"timeLimitInSeconds\",\n    get: function get() {\n      return TimeUtils.from_HHmmss_to_Seconds(this.$store.state.timeLimit, true);\n    }\n  }, {\n    key: \"personArray\",\n    get: function get() {\n      return this.$store.state.persons;\n    }\n  }, {\n    key: \"talkingPerson\",\n    get: function get() {\n      return this.$store.state.talkingPerson;\n    }\n  }, {\n    key: \"duration\",\n    get: function get() {\n      return this.$store.state.duration;\n    }\n  }, {\n    key: \"durationInHHmmss\",\n    get: function get() {\n      return TimeUtils.from_Seconds_to_HHmmss(this.duration, true);\n    }\n  }]);\n\n  _inherits(StandUp, _Vue);\n\n  return StandUp;\n}(Vue);\n\nStandUp = tslib_1.__decorate([Component({\n  components: {\n    HeadPool: HeadPool,\n    Pool: Pool\n  }\n})], StandUp);\nexport default StandUp;",{"version":3,"sources":["/home/opam/dev/stand-up-manager/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/opam/dev/stand-up-manager/src/views/StandUp.vue?vue&type=script&lang=ts"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue } from 'vue-property-decorator';\nimport HelloWorld from '@/components/HelloWorld.vue'; // @ is an alias to /src\nimport HeadPool from '@/components/HeadPool.vue';\nimport Pool from '@/components/Pool.vue';\nimport * as Collections from 'typescript-collections';\nimport Stopwatch from '../factories/Stopwatch';\nimport TimeUtils from '../utils/TimeUtils';\nimport PersonService from '../services/PersonService';\nimport ImageService from '../services/ImageService';\nimport Person from '../interfaces/Person';\nimport FirebaseService from '../services/FirebaseService';\nimport Status from '../interfaces/Status';\nimport { CHANGE_PERSONS, CHANGE_TALKING_PERSON, CHANGE_DURATION, CHANGE_TIME_LIMIT } from '../store';\n\n@Component({\n  components: {\n    HeadPool,\n    Pool,\n  },\n})\nexport default class StandUp extends Vue {\n\n  private personService = new PersonService();\n  private imageService = new ImageService();\n\n  private newPersonName: string|null = null;\n  private newPersonImage: string = '';\n\n  private mainStopwatch = new Stopwatch();\n  private avatarUrl = 'img/avatars/1.png';\n  private imageIndex = 0;\n\n  private created() {\n      this.newPersonImage = this.imageService.getNextImage();\n  }\n\n  private setTalkingPerson(person: Person): void {    \n    this.$store.commit(CHANGE_TALKING_PERSON, person);    \n    this.startTalkingTimerWhenPerson(person);\n  }\n\n  private setDuration(time: number): void {\n    this.$store.commit(CHANGE_DURATION, time);\n  }\n/*\n  private setTimeLimit(timeLimit: string): void {\n    this.$store.commit(CHANGE_TIME_LIMIT, timeLimit);\n  }\n*/\n  private startTalkingTimerWhenPerson(person): void {\n    if (this.talkingPerson.name !== '') {\n      if (this.mainStopwatch.isRunning() === false) {\n        this.mainStopwatch.start((time: number) => {\n          this.setDuration(time);     \n        });\n      }\n    } \n  }\n\n  private removePerson(person: Person): void {\n    this.personService.remove(person);\n    this.setTalkingPerson(PersonService.createPerson());\n  }\n\n  private clickFirebase(): void {\n   /*\n   const state:Status = {\n      talkingPerson: this.talkingPerson,\n      peopleArray: this.peopleArray,\n      duration: this.duration,\n      timeLimit: this.timeLimit,\n    };    \n    FirebaseService.sendInformation(state);\n    console.log(this.$store.state.status);*/\n  }\n\n  private addPerson() {\n    if (this.newPersonName !== null ) {\n      if (this.personService.findByName(this.newPersonName) === null) {\n        this.personService.add(this.newPersonName, this.newPersonImage );\n      } else {\n        alert(`${this.newPersonName} already exists! Choose different name.`);\n      }\n      this.newPersonName = null;\n      this.newPersonImage = this.imageService.getNextImage();\n    }\n  }\n\n  private pauseMainStopwatch(): void {\n    if (this.mainStopwatch.isRunning() === true) {\n        this.mainStopwatch.stop();\n        this.setTalkingPerson(PersonService.createPerson());\n    }\n  }\n\n  get timeLimit(): string {\n    return this.$store.state.timeLimit;\n  }\n\n  get timeLimitInSeconds() {\n    return TimeUtils.from_HHmmss_to_Seconds(this.$store.state.timeLimit, true);\n  }\n\n  get personArray(): Person[] {\n    return this.$store.state.persons;\n  }\n\n  get talkingPerson(): Person {\n    return this.$store.state.talkingPerson;\n  }\n\n  get duration(): number {\n    return this.$store.state.duration;\n  }\n\n  get durationInHHmmss() {\n    return TimeUtils.from_Seconds_to_HHmmss(this.duration, true);\n  }\n}\n"],"sourceRoot":""}]}