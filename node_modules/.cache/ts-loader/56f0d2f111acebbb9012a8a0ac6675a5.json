{"remainingRequest":"/home/opam/dev/stand-up-manager/node_modules/babel-loader/lib/index.js!/home/opam/dev/stand-up-manager/node_modules/ts-loader/index.js??ref--13-2!/home/opam/dev/stand-up-manager/src/services/Timer.ts","dependencies":[{"path":"/home/opam/dev/stand-up-manager/src/services/Timer.ts","mtime":1529138698483},{"path":"/home/opam/dev/stand-up-manager/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/home/opam/dev/stand-up-manager/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/home/opam/dev/stand-up-manager/node_modules/ts-loader/index.js","mtime":1528433923000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport _classCallCheck from \"/home/opam/dev/stand-up-manager/node_modules/@babel/runtime/helpers/builtin/es6/classCallCheck\";\nimport _createClass from \"/home/opam/dev/stand-up-manager/node_modules/@babel/runtime/helpers/builtin/es6/createClass\";\n\nvar Timer =\n/*#__PURE__*/\nfunction () {\n  function Timer() {\n    _classCallCheck(this, Timer);\n\n    this.startTime = 0;\n    this.currentTimeInSeconds = 0;\n  }\n\n  _createClass(Timer, [{\n    key: \"start\",\n    value: function start(callback) {\n      var _this = this;\n\n      this.startTime = Date.now() - this.currentTimeInSeconds * 1000;\n      this.intervalId = setInterval(function () {\n        callback(_this.getTime());\n      }, 450);\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      clearInterval(this.intervalId);\n      this.intervalId = null;\n    }\n  }, {\n    key: \"getStartTime\",\n    value: function getStartTime() {\n      return this.startTime;\n    }\n  }, {\n    key: \"getTime\",\n    value: function getTime() {\n      this.currentTimeInSeconds = parseFloat(Number((Date.now() - this.startTime) / 1000).toFixed(0));\n      return this.currentTimeInSeconds;\n    }\n  }]);\n\n  return Timer;\n}();\n\nexport { Timer as default };",{"version":3,"sources":["/home/opam/dev/stand-up-manager/src/services/Timer.ts"],"names":[],"mappings":";;;;IAEc,K;;;AAAd,mBAAA;AAAA;;AAGY,SAAA,SAAA,GAAoB,CAApB;AACA,SAAA,oBAAA,GAA+B,CAA/B;AAsBX;;;;0BApBgB,Q,EAA0B;AAAA;;AACnC,WAAK,SAAL,GAAiB,KAAK,GAAL,KAAe,KAAK,oBAAL,GAA4B,IAA5D;AACA,WAAK,UAAL,GAAkB,YAAY,YAAK;AAC/B,iBAAS,MAAK,OAAL,EAAT;AACH,OAFiB,EAEf,GAFe,CAAlB;AAGH;;;2BAEU;AACP,oBAAc,KAAK,UAAnB;AACA,WAAK,UAAL,GAAkB,IAAlB;AACH;;;mCAEkB;AACf,aAAO,KAAK,SAAZ;AACH;;;8BAEa;AACV,WAAK,oBAAL,GAA4B,WAAW,OAAO,CAAC,KAAK,GAAL,KAAa,KAAK,SAAnB,IAAgC,IAAvC,EAA6C,OAA7C,CAAqD,CAArD,CAAX,CAA5B;AACA,aAAO,KAAK,oBAAZ;AACH;;;;;;SAzBS,K","sourcesContent":["type CallbackFunction = (time: number) => void;\n\nexport default class Timer {\n\n    private intervalId: any;\n    private startTime: number = 0;\n    private currentTimeInSeconds: number = 0;\n\n    public start(callback: CallbackFunction) {\n        this.startTime = Date.now() - ( this.currentTimeInSeconds * 1000);\n        this.intervalId = setInterval(() => {\n            callback(this.getTime());\n        }, 450);\n    }\n\n    public stop() {\n        clearInterval(this.intervalId);\n        this.intervalId = null;\n    }\n\n    public getStartTime(): number {\n        return this.startTime;\n    }\n\n    public getTime(): number {\n        this.currentTimeInSeconds = parseFloat(Number((Date.now() - this.startTime) / 1000).toFixed(0));\n        return this.currentTimeInSeconds ;\n    }\n}\n\n"],"sourceRoot":""}]}