{"remainingRequest":"/home/opam/dev/stand-up-manager/node_modules/babel-loader/lib/index.js!/home/opam/dev/stand-up-manager/node_modules/ts-loader/index.js??ref--13-2!/home/opam/dev/stand-up-manager/src/services/FirebaseService.ts","dependencies":[{"path":"/home/opam/dev/stand-up-manager/src/services/FirebaseService.ts","mtime":1530048634080},{"path":"/home/opam/dev/stand-up-manager/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/home/opam/dev/stand-up-manager/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/home/opam/dev/stand-up-manager/node_modules/ts-loader/index.js","mtime":1528433923000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _classCallCheck from \"/home/opam/dev/stand-up-manager/node_modules/@babel/runtime/helpers/builtin/es6/classCallCheck\";\nimport _createClass from \"/home/opam/dev/stand-up-manager/node_modules/@babel/runtime/helpers/builtin/es6/createClass\";\nimport firebase from 'firebase';\n\nvar FirebaseService =\n/*#__PURE__*/\nfunction () {\n  function FirebaseService() {\n    _classCallCheck(this, FirebaseService);\n  }\n\n  _createClass(FirebaseService, null, [{\n    key: \"init\",\n    value: function init() {\n      var _this = this;\n\n      firebase.initializeApp(FirebaseService.config);\n      firebase.auth().signInAnonymously().catch(function (error) {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        alert(errorMessage);\n      });\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          // User is signed in.\n          var isAnonymous = user.isAnonymous;\n          _this.userId = user.uid; // ...\n        } else {\n          // User is signed out.\n          _this.userId = null;\n        } // ...\n\n      });\n      this.db = firebase.firestore();\n      var firestore = firebase.firestore();\n      var settings = {\n        /* your settings... */\n        timestampsInSnapshots: true\n      };\n      firestore.settings(settings);\n      this.db.collection(FirebaseService.COLLECTION_NAME).onSnapshot(function (snapshot) {\n        FirebaseService.getValue(snapshot.docs[0].id);\n      });\n    }\n  }, {\n    key: \"sendInformation\",\n    value: function sendInformation(payload) {\n      FirebaseService.db.collection(FirebaseService.COLLECTION_NAME).add({\n        payload: payload,\n        added_at: new Date()\n      }).then(function (docRef) {\n        console.log('Document written with ID: ', docRef.id);\n      }).catch(function (error) {\n        console.error('Error adding document: ', error);\n      });\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue(id) {\n      this.db.collection(FirebaseService.COLLECTION_NAME).orderBy('added_at', 'desc').limit(1).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          console.log(doc.id, '=>', doc.data());\n        });\n      });\n    }\n  }]);\n\n  return FirebaseService;\n}();\n\nexport { FirebaseService as default };\nFirebaseService.COLLECTION_NAME = 'stand-up';\nFirebaseService.userId = null;\nFirebaseService.config = {\n  apiKey: 'AIzaSyCJelLxh1b2f-EV8lsu-uwvqdYMcoIW5uE',\n  authDomain: 'stand-up-manager.firebaseapp.com',\n  databaseURL: 'https://stand-up-manager.firebaseio.com',\n  projectId: 'stand-up-manager',\n  storageBucket: 'stand-up-manager.appspot.com',\n  messagingSenderId: '82403032916'\n};",{"version":3,"sources":["/home/opam/dev/stand-up-manager/src/services/FirebaseService.ts"],"names":[],"mappings":";;;AAAA,OAAO,QAAP,MAAqB,UAArB;;IAGc,e;;;;;;;;;2BAeQ;AAAA;;AACd,eAAS,aAAT,CAAuB,gBAAgB,MAAvC;AAEA,eAAS,IAAT,GAAgB,iBAAhB,GAAoC,KAApC,CAA0C,UAAC,KAAD,EAAU;AAChD;AACA,YAAM,YAAY,MAAM,IAAxB;AACA,YAAM,eAAe,MAAM,OAA3B;AAEA,cAAM,YAAN;AACH,OAND;AAQA,eAAS,IAAT,GAAgB,kBAAhB,CAAmC,UAAC,IAAD,EAAS;AACxC,YAAI,IAAJ,EAAU;AACR;AACA,cAAM,cAAc,KAAK,WAAzB;AACA,gBAAK,MAAL,GAAc,KAAK,GAAnB,CAHQ,CAIR;AACD,SALD,MAKO;AACL;AACA,gBAAK,MAAL,GAAc,IAAd;AACD,SATuC,CAUxC;;AACH,OAXD;AAaA,WAAK,EAAL,GAAU,SAAS,SAAT,EAAV;AAEA,UAAM,YAAY,SAAS,SAAT,EAAlB;AACA,UAAM,WAAW;AAAC;AAAuB,+BAAuB;AAA/C,OAAjB;AACA,gBAAU,QAAV,CAAmB,QAAnB;AAEA,WAAK,EAAL,CAAQ,UAAR,CAAmB,gBAAgB,eAAnC,EACK,UADL,CACgB,UAAC,QAAD,EAAa;AACrB,wBAAgB,QAAhB,CAAyB,SAAS,IAAT,CAAc,CAAd,EAAiB,EAA1C;AACH,OAHL;AAIH;;;oCAE6B,O,EAAY;AACtC,sBAAgB,EAAhB,CAAmB,UAAnB,CAA8B,gBAAgB,eAA9C,EACK,GADL,CACS;AACD,wBADC;AAED,kBAAU,IAAI,IAAJ;AAFT,OADT,EAIO,IAJP,CAIY,UAAC,MAAD,EAAW;AACf,gBAAQ,GAAR,CAAY,4BAAZ,EAA0C,OAAO,EAAjD;AACH,OANL,EAMO,KANP,CAMa,UAAS,KAAT,EAAc;AACnB,gBAAQ,KAAR,CAAc,yBAAd,EAAyC,KAAzC;AACH,OARL;AASH;;;6BAEuB,E,EAAU;AAC9B,WAAK,EAAL,CAAQ,UAAR,CAAmB,gBAAgB,eAAnC,EAAoD,OAApD,CAA4D,UAA5D,EAAwE,MAAxE,EAAgF,KAAhF,CAAsF,CAAtF,EAAyF,GAAzF,GAA+F,IAA/F,CAAoG,UAAS,QAAT,EAAiB;AACjH,iBAAS,OAAT,CAAiB,UAAC,GAAD,EAAQ;AACrB,kBAAQ,GAAR,CAAY,IAAI,EAAhB,EAAoB,IAApB,EAA0B,IAAI,IAAJ,EAA1B;AACH,SAFD;AAGH,OAJD;AAKH;;;;;;SArES,e;AAEK,gBAAA,eAAA,GAAkB,UAAlB;AACA,gBAAA,MAAA,GAAsB,IAAtB;AAGA,gBAAA,MAAA,GAAS;AACpB,UAAQ,yCADY;AAEpB,cAAY,kCAFQ;AAGpB,eAAa,yCAHO;AAIpB,aAAW,kBAJS;AAKpB,iBAAe,8BALK;AAMpB,qBAAmB;AANC,CAAT","sourcesContent":["import firebase from 'firebase';\nimport store from '../store';\n\nexport default class FirebaseService {\n\n    private static COLLECTION_NAME = 'stand-up';\n    private static userId: string|null = null;\n    private static db: any;\n\n    private static config = {\n        apiKey: 'AIzaSyCJelLxh1b2f-EV8lsu-uwvqdYMcoIW5uE',\n        authDomain: 'stand-up-manager.firebaseapp.com',\n        databaseURL: 'https://stand-up-manager.firebaseio.com',\n        projectId: 'stand-up-manager',\n        storageBucket: 'stand-up-manager.appspot.com',\n        messagingSenderId: '82403032916',\n    };\n\n    public static init(): void {\n        firebase.initializeApp(FirebaseService.config);\n\n        firebase.auth().signInAnonymously().catch((error) => {\n            // Handle Errors here.\n            const errorCode = error.code;\n            const errorMessage = error.message;\n            \n            alert(errorMessage);\n        });\n\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n              // User is signed in.\n              const isAnonymous = user.isAnonymous;              \n              this.userId = user.uid;\n              // ...\n            } else {\n              // User is signed out.\n              this.userId = null;\n            }\n            // ...\n        });\n\n        this.db = firebase.firestore();   \n        \n        const firestore = firebase.firestore();\n        const settings = {/* your settings... */ timestampsInSnapshots: true};\n        firestore.settings(settings);\n\n        this.db.collection(FirebaseService.COLLECTION_NAME)\n            .onSnapshot((snapshot) => {\n                FirebaseService.getValue(snapshot.docs[0].id);\n            });\n    }\n\n    public static sendInformation(payload: any) {\n        FirebaseService.db.collection(FirebaseService.COLLECTION_NAME)\n            .add({\n                payload, \n                added_at: new Date(),               \n            }).then((docRef) => {\n                console.log('Document written with ID: ', docRef.id);\n            }).catch(function(error) {\n                console.error('Error adding document: ', error);\n            });\n    }\n\n    private static getValue(id: string) {\n        this.db.collection(FirebaseService.COLLECTION_NAME).orderBy('added_at', 'desc').limit(1).get().then(function(snapshot) {\n            snapshot.forEach((doc) => {\n                console.log(doc.id, '=>', doc.data());\n            });\n        });\n    }\n}\n"],"sourceRoot":""}]}